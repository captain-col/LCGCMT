package Boost

use LCG_Configuration v*
use LCG_Settings      v*
use Python            v* LCG_Interfaces -no_auto_imports

macro Boost_native_version "$(Boost_config_version)

# Define a macro for the location of the Boost installation
macro Boost_home $(LCG_external)/Boost/$(Boost_native_version)/$(LCG_system)
set LCG_boost_file_version "`echo $(Boost_config_version) | sed s/\\./_/g`"

#############################################################
# Define a macros for the location of the Boost include files, libraries,
# and data files.  There are also macros (defined below) for each boost
# library.  These macros can be added to a package linkopts.  For instance,
# to use the Boost graph library, a package might add
#
# macro yourPackage_linkopts " -lyourPackage $(Boost_linkopts_graph) "
#
# Look at the macro definitions below for more "documentation".
#############################################################

macro Boost_include $(Boost_home)/include/boost-$(Boost_file_version)
macro Boost_lib $(Boost_home)/lib
macro Boost_data $(Boost_home)/data_files

include_path none
include_dirs $(Boost_include)

macro Boost_compiler_version     "$(LCG_compiler)"    \
      target-icc                 "$(gcc2icc)"  \
      target-clang               "$(gcc2clang)" \
      target-gccmax              "$(gcc2max)"  \
      target-g11max              "$(gcc2g11)"  \
      target-gcc42&target-darwin "xgcc42" \
      target-gcc40&target-darwin "xgcc40" \
      target-vc9                 "vc90"  

macro Boost_linkopts "-L$(Boost_lib) " \
      target-win     "/LIBPATH:$(Boost_lib) "


##################################################################
# Define a macro for each boost library that can be added to a package
# requirements file linkopts.  For example, to use the graph library, add
# $(Boost_linkopts_graph) to the requirements linkopts.
##################################################################
macro Boost_linkopts_system     " -lboost_system-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                "   boost_system-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_filesystem " -lboost_filesystem-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                "   boost_filesystem-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_filesystem_mt " -lboost_filesystem-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                   "   boost_filesystem-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_iostreams  " -lboost_iostreams-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                " boost_iostreams-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_regex      " -lboost_regex-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                "   boost_regex-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_thread     " -lboost_thread-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                "  boost_thread-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_program_options " -lboost_program_options-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                     "  boost_program_options-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_serialization   " -lboost_serialization-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                     "  boost_serialization-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_date_time  " -lboost_date_time-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                " boost_date_time-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

macro Boost_linkopts_graph      " -lboost_graph-$(Boost_compiler_version)-mt-$(Boost_file_version) " \
      target-win                " boost_graph-$(Boost_compiler_version)-mt-$(Boost_file_version).lib "

# Setup CMT dependency optimization macros
macro Boost_header_file_filter $(Boost_include)
macro Boost_header_file_stamp  $(Boost_include)/boost/any.hpp

apply_pattern set_lib_path

macro Boost_export_paths "$(Boost_home)"

