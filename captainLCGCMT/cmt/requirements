package captainLCGCMT

# Define tags for the packages to skip.  These tags are of the form
# "skip_<package>".  Example: "skip_genie"

# The semiOffline tag can be added to the CMTEXTRATAGS environment variable to
# only build the LCGCMT packages needed to process data.  This is mostly
# used when installing the CAPTAIN software on the daq machines to do
# almost online processing (like checking calibration constants).
tag semiOffline skip_montecarlo 

# tag Linux skip_nothing
tag Darwin skip_GENIE

# Conglomerate tags.
tag skip_montecarlo skip_GEANT skip_GENIE
tag skip_GEANT skip_geant4 skip_pythia6 skip_xercesc skip_expat
tag skip_GENIE skip_genie skip_lhapdf skip_log4cpp skip_yamlcpp

# Define a pattern to build an external package.
pattern external \
   tag skip_<build> ;\
   action <build> "(cd ../../<offset><build>/cmt; \
       cmt config > /dev/null 2>&1; \
       . ./setup.sh; \
       cmt broadcast cmt config > /dev/null 2>&1; \
       . ./setup.sh; \
       echo Do \'make pkg_install\' in <offset><build>; \
       make -j1 pkg_install; \
       echo Done in <offset><build>)" \
       skip_<build> "(echo skipping <build>)" ;\
   macro_append constituents " <build>"

# Define a pattern to build an external package that depends on another
# package being built first.
pattern external_depends \
   apply_pattern external offset=<offset> build=<build> ;\
   macro <build>_dependencies <depends>

#########################################################################
# Everything below here only gets included when actually in the
# captainLCGCMT package.
#
# The list of LCGCMT packages to be built is at the bottom of this file.
#########################################################################

private

# Define a pattern to build one of the LCGCMT packages.  This only works
# for captainLCGCMT.  This takes a single argument called "build" which
# specifies the name of the LCG_Builder package to compile.
pattern lcgcmt apply_pattern external offset=LCG_Builders/ build=<build>

# Define a pattern to build one of the LCGCMT packages that depends on
# another package being built first.  This takes two arguments.  The
# "build" argument gives the name of the LCG_Builder package that will be
# build.  The "depends" argument gives the name of the packages that need
# to be build before the new package.
pattern lcgcmt_depends \
   apply_pattern external_depends offset=LCG_Builders/ build=<build> depends=<depends>

#########################################################################
# List of all the packages to build.  These will be built by the "make all"
# target.

lcgcmt build=cmake
lcgcmt build=boost
lcgcmt build=dawn
lcgcmt build=gsl
lcgcmt build=expat
lcgcmt build=fftw
lcgcmt build=xercesc
lcgcmt build=log4cpp
lcgcmt build=pythia6
lcgcmt build=gmp
lcgcmt build=sqlite

# Packages with dependencies.
lcgcmt_depends build=mpfr depends="gmp"
lcgcmt_depends build=yamlcpp depends="cmake"
lcgcmt_depends build=CGAL depends="mpfr gmp boost cmake"
lcgcmt_depends build=orocos_bfl depends="boost cmake"
lcgcmt_depends build=ROOT depends="gsl fftw sqlite cmake"
lcgcmt_depends build=geant4 depends="ROOT pythia6 xercesc expat cmake"
lcgcmt_depends build=lhapdf depends="yamlcpp boost"
lcgcmt_depends build=genie depends="lhapdf ROOT pythia6 log4cpp yamlcpp boost"

